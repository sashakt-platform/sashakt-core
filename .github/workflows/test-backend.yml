name: Test Backend

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch: # allows manual runs

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.4.15"
          enable-cache: true
      - run: cp .env.example .env
      - run: docker compose down -v --remove-orphans
      - run: docker compose up -d db mailcatcher
      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be healthy..."
          until [ "$(docker compose ps -q db | xargs docker inspect -f '{{.State.Health.Status}}')" == "healthy" ]; do
            echo "Database is not ready yet..."
            sleep 2
          done
      - name: Migrate DB
        run: docker-compose exec backend bash scripts/prestart.sh
      - name: Run tests
        run: docker compose exec backend bash scripts/tests-start.sh "Coverage for ${{ github.sha }}"
        # the generated xml is pushed to codecov
      - run: docker compose exec backend pytest --cov=app --cov-branch --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - run: docker compose down -v --remove-orphans
